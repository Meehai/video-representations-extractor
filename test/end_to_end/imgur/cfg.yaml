vre:
  start_frame: ${oc.env:VRE_START_IX}
  end_frame: ${oc.env:VRE_END_IX,null}
  export_npy: True
  export_png: True

representations:
  rgb:
    type: default
    name: rgb
    dependencies: []
    parameters: {}

  hsv:
    type: default
    name: hsv
    dependencies: []
    parameters: {}

  halftone1:
    type: soft-segmentation
    name: python-halftone
    dependencies: []
    parameters:
      sample: 3
      scale: 1
      percentage: 91
      angles: [0, 15, 30, 45]
      antialias: False
      resolution: [240, 426]

  edges canny:
    type: edges
    name: canny
    dependencies: []
    parameters:
      threshold1: 100
      threshold2: 200
      aperture_size: 3
      l2_gradient: True

  softseg kmeans:
    type: soft-segmentation
    name: kmeans
    dependencies: []
    parameters:
      n_clusters: 6
      epsilon: 2
      max_iterations: 10
      attempts: 3

  softseg gb:
    type: soft-segmentation
    name: generalized_boundaries
    dependencies: []
    parameters:
      use_median_filtering: True
      adjust_to_rgb: True
      max_channels: 3

  # semantic safeuav torch:
  #   type: semantic-segmentation
  #   name: safeuav
  #   dependencies: []
  #   parameters:
  #     train_height: 240
  #     train_width: 428
  #     num_classes: 8
  #     color_map: [[0, 255, 0], [0, 127, 0], [255, 255, 0], [255, 255, 255],
  #                 [255, 0, 0], [0, 0, 255], [0, 255, 255], [127, 127, 63]]
  #   vre_parameters:
  #     device: ${oc.env:VRE_DEVICE,cpu}
  #     weights_file: safeuav_semantic_0956_pytorch.ckpt

  edges dexined:
    type: edges
    name: dexined
    dependencies: []
    parameters: {}
    vre_parameters:
      device: ${oc.env:VRE_DEVICE,cpu}

  opticalflow rife:
    type: optical-flow
    name: rife
    dependencies: []
    parameters:
      uhd: False
      compute_backward_flow: False
    vre_parameters:
      device: ${oc.env:VRE_DEVICE,cpu}

  depth odoflow (rife):
    type: depth
    name: odo-flow
    dependencies: [opticalflow rife]
    parameters:
      linear_ang_vel_correction: True
      focus_correction: True
      sensor_fov: 75
      sensor_width: 3840
      sensor_height: 2160
      min_depth_meters: 0
      max_depth_meters: 400
    vre_parameters:
      velocities_path: DJI_0956_velocities.npz

  # normals svd (rife):
  #   type: normals
  #   name: depth-svd
  #   dependencies: [depth odoflow (rife)]
  #   parameters:
  #     sensor_fov: 75
  #     sensor_width: 3840
  #     sensor_height: 2160
  #     window_size: 11

  fastsam(s):
    type: soft-segmentation
    name: fastsam
    dependencies: []
    parameters:
      variant: fastsam-s
      iou: 0.9
      conf: 0.4
    vre_parameters:
      device: ${oc.env:VRE_DEVICE,cpu}

  mask2former:
    type: semantic-segmentation
    name: mask2former
    dependencies: []
    parameters:
      model_id: "49189528_1"
      semantic_argmax_only: True
    vre_parameters:
      device: ${oc.env:VRE_DEVICE,cpu}

  # # SUCKY BECAUSE SUPERSLOW. Adds like 2-3 mins in CI. Rife is good enough.
  # opticalflow raft:
  #   type: optical-flow
  #   name: raft
  #   dependencies: []
  #   parameters:
  #     inference_height: 720
  #     inference_width: 1280
  #   vre_parameters:
  #     device: ${oc.env:VRE_DEVICE,cpu}

  # depth odoflow (raft):
  #   type: depth
  #   name: odo-flow
  #   dependencies: [opticalflow raft]
  #   parameters:
  #     velocities_path: DJI_0956_velocities.npz
  #     linearAngVelCorrection: True
  #     focus_correction: True
  #     sensor_fov: 75
  #     sensor_width: 3840
  #     sensor_height: 2160
  #     min_depth_meters: 0
  #     max_depth_meters: 400

  # normals svd (raft):
  #   type: normals
  #   name: depth-svd
  #   dependencies: [depth odoflow (raft)]
  #   parameters:
  #     sensor_fov: 75
  #     sensor_width: 3840
  #     sensor_height: 2160
  #     window_size: 11

  # sucky because slow, but it's good/pretrained
  depth dpt:
    type: depth
    name: dpt
    dependencies: []
    parameters: {}
    vre_parameters:
      device: ${oc.env:VRE_DEVICE,cpu}

  # normals svd (dpt):
  #   type: normals
  #   name: depth-svd
  #   dependencies: [depth dpt]
  #   parameters:
  #     sensor_fov: 75
  #     sensor_width: 3840
  #     sensor_height: 2160
  #     window_size: 11
