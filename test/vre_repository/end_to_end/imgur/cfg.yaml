default_compute_parameters:
  output_size: [400, 600]
  batch_size: 1

default_io_parameters:
  binary_format: npz
  image_format: png
  compress: True

default_learned_parameters:
  device: ${oc.env:VRE_DEVICE,cpu}

representations:
  rgb:
    type: color/rgb
    dependencies: []
    parameters: {}
    compute_parameters:
      batch_size: 5

  hsv:
    type: color/hsv
    dependencies: [rgb]
    parameters: {}

  halftone1:
    type: soft-segmentation/python-halftone
    dependencies: []
    parameters:
      sample: 3
      scale: 1
      percentage: 91
      angles: [0, 15, 30, 45]
      antialias: False
      resolution: [240, 426]

  edges_canny:
    type: edges/canny
    dependencies: []
    parameters:
      threshold1: 100
      threshold2: 200
      aperture_size: 3
      l2_gradient: True

  softseg_gb:
    type: soft-segmentation/generalized-boundaries
    dependencies: []
    parameters:
      use_median_filtering: True
      adjust_to_rgb: True
      max_channels: 3

  edges_dexined:
    type: edges/dexined
    dependencies: []
    parameters: {}

  opticalflow_rife:
    type: optical-flow/rife
    dependencies: []
    parameters:
      uhd: False
      compute_backward_flow: False

  normals_svd(depth_dpt):
    type: normals/depth-svd
    dependencies: [depth_dpt]
    parameters:
      sensor_fov: 75
      sensor_width: 3840
      sensor_height: 2160
      window_size: 11
    compute_parameters:
      output_dtype: float16

  fastsam(s):
    type: soft-segmentation/fastsam
    dependencies: []
    parameters:
      variant: fastsam-s
      iou: 0.9
      conf: 0.4

  mask2former:
    type: semantic-segmentation/mask2former
    dependencies: []
    parameters:
      model_id: "49189528_1"
      disk_data_argmax: True

  depth_dpt:
    type: depth/dpt
    dependencies: []
    parameters: {}

  # # SUCKY BECAUSE SUPERSLOW. Adds like 2-3 mins in CI. Rife is good enough.
  # opticalflow raft:
  #   type: optical-flow/raft
  #   dependencies: []
  #   parameters:
  #     inference_height: 720
  #     inference_width: 1280
  #     iters: 5
  #     small: False

  # # SUCKY BECAUSE SUPERSLOW. But really good depth.
  # depth_marigold:
  #   type: depth/marigold
  #   dependencies: []
  #   parameters:
  #     variant: marigold-lcm-v1-0
  #     denoising_steps: 1
  #     ensemble_size: 1
  #     processing_resolution: 768
