"""Weights utils. Stuff related to weights repository, downloading and loading weights"""
import urllib.request
from pathlib import Path
from pprint import pformat
import os
import torch as tr

from ..logger import vre_logger as logger
from .utils import get_project_root, is_git_lfs, DownloadProgressBar

# TODO: this is a stupid way to do it but i can't get git-lfs info or scrap gitlab yet.
def _get_weights_files_for_representation(repr_name: str) -> list[str]:
    """This can kinda be generated by:
    `cd resources/weights && find . -type f`
    +
    ```python
    res = {}
    for item in a:
        item = item.removeprefix("./")
        repr_name, rest = "/".join(item.split("/")[0:2]), "/".join(item.split("/")[2:])
        res.setdefault(repr_name, []).append(rest)
    pprint(res)
    ```
    """
    weights_repository = {
        'depth/dpt': ['depth_dpt_midas.pth'],
        'depth/marigold': ['marigold-lcm-v1-0_unet.pt/0000.pt', 'marigold-lcm-v1-0_unet.pt/0002.pt',
                           'marigold-lcm-v1-0_unet.pt/0003.pt', 'marigold-lcm-v1-0_unet.pt/0001.pt', 'vae.pt'],
        'edges/dexined': ['dexined.pth'],
        'optical_flow/raft': ['raft-things.pkl'],
        'optical_flow/rife': ['contextnet.pkl', 'unet.pkl', 'flownet.pkl'],
        'semantic_segmentation/mask2former': ['49189528_0.ckpt', '49189528_1.ckpt', '47429163_0.ckpt'],
        'semantic_segmentation/safeuav': ['safeuav_semantic_0956_pytorch.ckpt'],
        'soft_segmentation/fastsam': ['FastSAM-x.pt', 'FastSAM-s.pt']
    }
    assert repr_name in weights_repository, f"'{repr_name}' not in {pformat(weights_repository)}"
    return weights_repository[repr_name]

def _get_weights_dir() -> Path:
    """gets the weights dir of this project"""
    return Path(os.getenv("VRE_WEIGHTS_DIR", get_project_root() / "resources/weights"))

def fetch_weights(repr_file: Path) -> Path:
    """fetches weights for a representation. repr_file is expected to be Path(__file__) from the caller script"""
    repr_name = "/".join([x.name for x in Path(repr_file).parents[0:2][::-1]]) # i.e. [depth/marigold]/{marigold.py}
    files = _get_weights_files_for_representation(repr_name)
    base_url = "https://gitlab.com/meehai/video-representations-extractor/-/raw/master/resources/weights"
    for file in files:
        url = f"{base_url}/{repr_name}/{file}"
        output_path = _get_weights_dir() / repr_name / file
        if output_path.exists() and not is_git_lfs(output_path):
            continue
        output_path.parent.mkdir(exist_ok=True, parents=True)
        logger.debug(f"'{repr_name}/{file}' does not exist. Downloading from remote weights repository")
        with DownloadProgressBar(unit="B", unit_scale=True, miniters=1, desc=f"{repr_name}/{file}") as t:
            urllib.request.urlretrieve(url, filename=output_path, reporthook=t.update_to)
    return _get_weights_dir() / repr_name

def load_weights(path: Path) -> dict[str, tr.Tensor]:
    """load weights from disk. weights can be sharded as well. Sometimes we store this due to git-lfs big files bug."""
    logger.debug(f"Loading weights from '{path}'")
    if path.is_dir():
        res = {}
        for item in path.iterdir():
            res = {**res, **tr.load(item, map_location="cpu")}
        return res
    return tr.load(path, map_location="cpu")
